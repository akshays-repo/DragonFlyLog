version: '3.3'

services:
  # prod:
  #   container_name: nestjs_api_prod
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: production  # Use production stage from Dockerfile
  #   command: node dist/main
  #   ports:
  #     - "127.0.0.1:3000:3000"
  #   environment:
  #     NODE_ENV: production
  #     DATABASE_URL: postgres://nestjs:secret@postgres:5432/logs_db
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     REDIS_URL: redis://redis:6379/0
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - nestjs-network
  #   restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: logging_postgres
    restart: always
    environment:
      POSTGRES_USER: nestjs
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: logs_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - nestjs-network

  redis:
    image: redis:latest
    container_name: logging_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redisdata:/data
    networks:
      - nestjs-network

  # adminer:
  #   image: adminer
  #   container_name: logging_adminer
  #   restart: always
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     ADMINER_DEFAULT_SERVER: postgres
  #   networks:
  #     - nestjs-network

networks:
  nestjs-network:
    driver: bridge

volumes:
  pgdata:
  redisdata:
